import random
import time
from os import system

def lassu_szoveg(szoveg, kesleltetes=0.04):
    """Sz√∂veg lass√∫ ki√≠r√°sa dr√°mai hat√°s kedv√©√©rt."""
    for karakter in szoveg:
        print(karakter, end='', flush=True)
        time.sleep(kesleltetes)
    print()

def tiszta_kepernyo():
    """K√©perny≈ë t√∂rl√©se a h√°tt√©r kialak√≠t√°s√°hoz."""
    system('cls' if system == 'nt' else 'clear')

def bevezetes():
    """Bevezet√©s a j√°t√©khoz."""
    tiszta_kepernyo()
    lassu_szoveg("""
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      üèõÔ∏è  OD√úSSZEIA  üèõÔ∏è
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Az epikus kaland t√∂rt√©nete alapj√°n, melyben Te, Od√ºsszeusz,
    megpr√≥b√°lsz hazat√©rni Ithak√°ba Tr√≥ja buk√°sa ut√°n.

    Isteni pr√≥b√°k, sz√∂rnyek √©s hatalmas vesz√©lyek v√°rnak r√°d!
    C√©lod: t√∫l√©lni √©s hazat√©rni Penelop√©hoz √©s T√©lemakhoszhoz.

    K√©szen √°llsz az utaz√°sra? (igen/nem)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    """)

    while True:
        valasz = input("> ").lower()
        if valasz == "igen":
            lassu_szoveg("\nAz istenek r√°d mosolyognak. Kezdj√ºk!\n")
            break
        elif valasz == "nem":
            lassu_szoveg("\nAz istenek haragra gerjednek gy√°vas√°god miatt. Viszl√°t!\n")
            exit()
        else:
            lassu_szoveg("K√©rlek, v√°laszolj 'igen' vagy 'nem'.\n")

def talalkozasi_opciok(talalkozas_tipusa):
    """Tal√°lkoz√°s-specifikus lehet≈ës√©gek."""
    if talalkozas_tipusa == "K√ºklopsz":
        lassu_szoveg("1. Harcolsz a K√ºklopsszal.\n2. Elb√∫jsz el≈ële.\n3. Becsapod ≈ët egy hazugs√°ggal.")
    elif talalkozas_tipusa == "Vihar":
        lassu_szoveg("1. √Åthaj√≥zol a viharon.\n2. Im√°dkozol Poszeid√≥nhoz.\n3. Kiv√°rod, m√≠g elcsendesedik.")
    elif talalkozas_tipusa == "Szir√©nek":
        lassu_szoveg("1. Viasszal bedugod a f√ºled.\n2. Dalp√°rbajt kezdem√©nyezel.\n3. Engedsz a cs√°b√≠t√°snak.")
    elif talalkozas_tipusa == "Szk√ºlla √©s Khar√ºbdisz":
        lassu_szoveg("1. K√∂zelebb m√©sz Szk√ºll√°hoz.\n2. K√∂zelebb m√©sz Khar√ºbdiszhez.\n3. K√∂z√©pen pr√≥b√°lsz √°thaladni.")
    elif talalkozas_tipusa == "Kirk√©":
        lassu_szoveg("1. T√°madsz.\n2. √ìvatosan seg√≠ts√©get k√©rsz.\n3. Elfogadod a lakom√°j√°t.")

def valasztas_megoldasa(talalkozas_tipusa, valasztas, egeszseg):
    """A j√°t√©kos v√°laszt√°s√°nak feldolgoz√°sa."""
    eredmenyek = {
        "K√ºklopsz": {
            1: (-30, "A K√ºklopsz t√∫l er≈ës, alig menek√ºlsz!"),
            2: (-10, "Siker√ºl elb√∫jnod, de elvesz√≠ted n√©h√°ny k√©szletedet."),
            3: (10, "Becsapod, √©s biztons√°gban elmenek√ºlsz."),
        },
        "Vihar": {
            1: (-20, "A vihar megrong√°lja a haj√≥dat, de t√∫l√©led."),
            2: (-10, "Az ima enyh√≠ti a vihart, de a k√°rok jelent≈ësek."),
            3: (0, "Biztons√°gban kiv√°rod a vihart."),
        },
        "Szir√©nek": {
            1: (0, "Viasszal bedugod a f√ºled, √©s s√©rtetlen√ºl elhaladsz."),
            2: (10, "Megnyered a dalp√°rbajt, √©s tov√°bbutazhatsz."),
            3: (-30, "Engedsz a daluknak, √©s alig menek√ºlsz meg."),
        },
        "Szk√ºlla √©s Khar√ºbdisz": {
            1: (-20, "Szk√ºlla hat embert elragad, de a haj√≥d megmenek√ºl."),
            2: (-30, "Khar√ºbdisz szinte elnyeli a haj√≥t!"),
            3: (-10, "Kisebb k√°rokat szenvedsz, de √°tv√©szelsz mindent."),
        },
        "Kirk√©": {
            1: (-20, "T√°mad√°sod miatt √°tkot sz√≥r r√°d."),
            2: (10, "√ìvatos vagy, √©s tan√°csokat kapsz t≈ële."),
            3: (-10, "T√∫l k√∂nnyen b√≠zol benne, majdnem csapd√°ba esel."),
        },
    }
    egeszseg_valtozas, eredmeny = eredmenyek[talalkozas_tipusa][valasztas]
    lassu_szoveg(eredmeny + f" (Eg√©szs√©g v√°ltoz√°s: {egeszseg_valtozas})\n")
    return egeszseg + egeszseg_valtozas

def jatek():
    """A j√°t√©k f≈ë ciklusa."""
    egeszseg = 100
    talalkozasok = ["K√ºklopsz", "Vihar", "Szir√©nek", "Szk√ºlla √©s Khar√ºbdisz", "Kirk√©"]
    veletlen_talalkozasok = random.sample(talalkozasok, len(talalkozasok))

    bevezetes()

    for talalkozas_tipusa in veletlen_talalkozasok:
        tiszta_kepernyo()
        lassu_szoveg(f"√öj szakasz! Tal√°lkozol: {talalkozas_tipusa}!\n")
        talalkozasi_opciok(talalkozas_tipusa)

        while True:
            try:
                valasztas = int(input("\nV√°lassz egy lehet≈ës√©get (1/2/3): "))
                if valasztas in [1, 2, 3]:
                    break
                else:
                    lassu_szoveg("K√©rlek, v√°lassz egy √©rv√©nyes opci√≥t: 1, 2 vagy 3.\n")
            except ValueError:
                lassu_szoveg("Hib√°s bemenet. K√©rlek, √≠rj be egy sz√°mot (1/2/3).\n")

        egeszseg = valasztas_megoldasa(talalkozas_tipusa, valasztas, egeszseg)
        lassu_szoveg(f"Jelenlegi eg√©szs√©ged: {egeszseg}/100\n")

        if egeszseg <= 0:
            lassu_szoveg("\nElbukt√°l az utaz√°sban. Az istenek szomor√∫an n√©znek r√°d.\n")
            lassu_szoveg("J√ÅT√âK V√âGE.\n")
            return

    lassu_szoveg("\nüè† Ithaka sziget√©re √©rkezel, √©s Penelop√© √∂r√∂mmel fogad!\n")
    lassu_szoveg("Gratul√°lok, h≈ës! Sikeresen teljes√≠tetted az Od√ºsszei√°t! üéâ\n")

if __name__ == "__main__":
    jatek()
