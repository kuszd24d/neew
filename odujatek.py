import random
import time

def lassu_szoveg(szoveg, kesleltetes=0.04):
    """Sz√∂veg lass√∫ ki√≠r√°sa dr√°mai hat√°s kedv√©√©rt."""
    for karakter in szoveg:
        print(karakter, end='', flush=True)
        time.sleep(kesleltetes)
    print()

def bevezetes():
    """Bevezet√©s a j√°t√©khoz."""
    lassu_szoveg("√údv√∂z√∂llek, h≈ës, az Od√ºsszeia kalandj√°ban!\n")
    lassu_szoveg("Te vagy Od√ºsszeusz, Ithaka ravasz kir√°lya, akit b√°tors√°g√°r√≥l √©s furfangj√°r√≥l ismernek.\n")
    lassu_szoveg("Tr√≥ja buk√°sa ut√°n hossz√∫ √©s vesz√©lyes √∫ton kell hazat√©rned Ithak√°ba.\n")
    lassu_szoveg("√ötk√∂zben istenek pr√≥b√°ra tesznek, sz√∂rnyekkel √©s viharokkal kell szemben√©zned.\n")
    lassu_szoveg("A c√©lod: t√∫l√©ld az utaz√°st, √©s t√©rj haza csal√°dodhoz.\n")
    lassu_szoveg("K√©szen √°llsz az epikus kalandra? (igen/nem)\n")

    while True:
        valasz = input("> ").lower()
        if valasz == "igen":
            lassu_szoveg("Az istenek mosolyognak r√°d. Kezd≈ëdj√©k az utaz√°s!\n")
            break
        elif valasz == "nem":
            lassu_szoveg("Az istenek haragra gerjednek gy√°vas√°god miatt. Viszl√°t, haland√≥!\n")
            exit()
        else:
            lassu_szoveg("K√©rlek, v√°laszolj 'igen' vagy 'nem'.\n")

def talalkozasi_opciok(talalkozas_tipusa):
    """Tal√°lkoz√°s-specifikus lehet≈ës√©gek felaj√°nl√°sa."""
    if talalkozas_tipusa == "K√ºklopsz":
        lassu_szoveg("1. Harcolsz a K√ºklopsszal.\n2. Elb√∫jsz a K√ºklopsz el≈ël.\n3. Becsapod a K√ºklopszot egy ravasz hazugs√°ggal.")
    elif talalkozas_tipusa == "Vihar":
        lassu_szoveg("1. √Åthaj√≥zol a viharon.\n2. Im√°dkozol Poszeid√≥nhoz kegyelem√©rt.\n3. Lehorgonyzol √©s kiv√°rod, m√≠g elcsitul.")
    elif talalkozas_tipusa == "Szir√©nek":
        lassu_szoveg("1. Bedugod a f√ºled viasszal, √©s elhaj√≥zol mellett√ºk.\n2. Dalp√°rbajra h√≠vod a Szir√©neket.\n3. Engedsz a daluk cs√°b√≠t√°s√°nak.")
    elif talalkozas_tipusa == "Szk√ºlla √©s Khar√ºbdisz":
        lassu_szoveg("1. K√∂zelebb haj√≥zol Szk√ºll√°hoz (a hatfej≈± sz√∂rnyh√∂z).\n2. K√∂zelebb haj√≥zol Khar√ºbdiszhez (az √∂rv√©nyhez).\n3. Megpr√≥b√°lsz k√∂z√©pen √°thaladni.")
    elif talalkozas_tipusa == "Kirk√©":
        lassu_szoveg("1. T√°mad√°sba lend√ºlsz Kirk√© ellen.\n2. √ìvatosan k√©red a seg√≠ts√©g√©t.\n3. Elfogadod a lakom√°j√°t, √©s b√≠zol benne.")

def valasztas_megoldasa(talalkozas_tipusa, valasztas, egeszseg):
    """A j√°t√©kos v√°laszt√°s√°nak feldolgoz√°sa."""
    eredmenyek = {
        "K√ºklopsz": {
            1: (-30, "A K√ºklopsz t√∫l er≈ës! Alig menek√ºlsz meg √©lve."),
            2: (-10, "Sikeresen elb√∫jsz, de a K√ºklopsz elpuszt√≠tja a k√©szleteidet."),
            3: (10, "Becsapod a K√ºklopszot azzal, hogy 'Senki'-nek nevezed magad, √©s s√©rtetlen√ºl elmenek√ºlsz."),
        },
        "Vihar": {
            1: (-20, "A vihar megrong√°lja a haj√≥dat, de t√∫l√©led."),
            2: (-10, "Poszeid√≥n meghallgatja im√°idat, de csak r√©szben enyh√≠t a viharon."),
            3: (0, "Kiv√°rod a vihart, √©s s√©rtetlen√ºl folytathatod az utat."),
        },
        "Szir√©nek": {
            1: (0, "Bedugod a f√ºled, √©s biztons√°gban elhaj√≥zol mellett√ºk."),
            2: (10, "Megnyered a dalp√°rbajt, √©s a Szir√©nek tisztelettel t√°voznak."),
            3: (-30, "A daluk cs√°b√≠t√°s√°nak engedsz, √©s alig menek√ºlsz meg √©lve."),
        },
        "Szk√ºlla √©s Khar√ºbdisz": {
            1: (-20, "Szk√ºlla hat emberedet felfalja, de a haj√≥d megmenek√ºl."),
            2: (-30, "Khar√ºbdisz szinte elnyeli a haj√≥dat, alig menek√ºlsz meg."),
            3: (-10, "K√∂z√©pen pr√≥b√°lsz √°tkelni, kisebb k√°rokat szenvedve."),
        },
        "Kirk√©": {
            1: (-20, "T√°mad√°st ind√≠tasz Kirk√© ellen, de embereid egy r√©sz√©t diszn√≥v√° v√°ltoztatja."),
            2: (10, "√ìvatosan k√©red a seg√≠ts√©g√©t, √©s tan√°csokat ad az utadhoz."),
            3: (-10, "T√∫l k√∂nnyen megb√≠zol benne, csapd√°ba ejt, de v√©g√ºl megmenek√ºlsz."),
        },
    }
    egeszseg_valtozas, eredmeny = eredmenyek[talalkozas_tipusa][valasztas]
    lassu_szoveg(eredmeny + f" (Eg√©szs√©g v√°ltoz√°s: {egeszseg_valtozas})\n")
    return egeszseg + egeszseg_valtozas

def veletlen_talalkozas():
    """V√©letlenszer≈± tal√°lkoz√°s gener√°l√°sa."""
    talalkozasok = ["K√ºklopsz", "Vihar", "Szir√©nek", "Szk√ºlla √©s Khar√ºbdisz", "Kirk√©"]
    return random.choice(talalkozasok)

def jatek():
    """A j√°t√©k f≈ë ciklusa."""
    egeszseg = 100
    utazas_hossza = 5
    bevezetes()
    
    for lepes in range(1, utazas_hossza + 1):
        lassu_szoveg(f"\nUtaz√°s {lepes}. szakasza a(z) {utazas_hossza}-b√≥l...\n")
        talalkozas_tipusa = veletlen_talalkozas()
        lassu_szoveg(f"Tal√°lkozol: {talalkozas_tipusa}!\n")
        
        talalkozasi_opciok(talalkozas_tipusa)
        
        while True:
            try:
                valasztas = int(input("\nV√°lassz egy lehet≈ës√©get (1/2/3): "))
                if valasztas in [1, 2, 3]:
                    break
                else:
                    lassu_szoveg("K√©rlek, v√°lassz egy √©rv√©nyes opci√≥t: 1, 2 vagy 3.\n")
            except ValueError:
                lassu_szoveg("Hib√°s bemenet. K√©rlek, √≠rj be 1-et, 2-t vagy 3-at.\n")
        
        egeszseg = valasztas_megoldasa(talalkozas_tipusa, valasztas, egeszseg)
        lassu_szoveg(f"Jelenlegi eg√©szs√©ged: {egeszseg}/100\n")
        
        if egeszseg <= 0:
            lassu_szoveg("Belebukt√°l az utaz√°sba. Az istenek szomor√∫an n√©znek r√°d.\n")
            lassu_szoveg("J√ÅT√âK V√âGE.\n")
            return

    lassu_szoveg("üè† V√©g√ºl, minden pr√≥ba ut√°n, el√©rsz Ithak√°ba!\n")
    lassu_szoveg("Penelop√© √©s T√©lemakhosz √∂r√∂mmel fogadnak otthon. Az istenek tisztelik kitart√°sodat.\n")
    lassu_szoveg("Gratul√°lok, h≈ës! Sikeresen befejezted az od√ºsszei√°dat. üéâ\n")

if __name__ == "__main__":
    jatek()
igen
